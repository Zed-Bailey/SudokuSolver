@page "/"
@using SudokuSolver.UI.Data
@using Microsoft.AspNetCore.Mvc.RazorPages
@inject GridService _service
@inject NavigationManager _navigation

<PageTitle>Sudoku Input</PageTitle>

<style>
td {
    width: 50px;
    height: 50px;
    text-align: center;
}

tr:nth-of-type(3) td {
     border-bottom: 3px solid red !important;
}

tr:nth-of-type(6) td {
     border-bottom: 3px solid red !important;
}


td:nth-of-type(3) {
     border-right: 3px solid red !important;
}
td:nth-of-type(6) {
     border-right: 3px solid red !important;
}

td > input {
    width: 50px;
    height: 50px; 
    text-align: center;
}

</style>


<table class="sudokuGrid">
    <tbody>
    @for (var r = 0; r < Height; r++)
    {
        var row = r;
        <tr> 
            <td><input type="text" maxlength="1" oninput="this.value = this.value.replace(/[^1-9]/g, '');" @bind="@(cells[row,0])"/></td> 
            <td><input type="text" maxlength="1" oninput="this.value = this.value.replace(/[^1-9]/g, '');" @bind="@(cells[row,1])"/></td> 
            <td><input type="text" maxlength="1" oninput="this.value = this.value.replace(/[^1-9]/g, '');" @bind="@(cells[row,2])"/></td> 
            <td><input type="text" maxlength="1" oninput="this.value = this.value.replace(/[^1-9]/g, '');" @bind="@(cells[row,3])"/></td> 
            <td><input type="text" maxlength="1" oninput="this.value = this.value.replace(/[^1-9]/g, '');" @bind="@(cells[row,4])"/></td> 
            <td><input type="text" maxlength="1" oninput="this.value = this.value.replace(/[^1-9]/g, '');" @bind="@(cells[row,5])"/></td> 
            <td><input type="text" maxlength="1" oninput="this.value = this.value.replace(/[^1-9]/g, '');" @bind="@(cells[row,6])"/></td> 
            <td><input type="text" maxlength="1" oninput="this.value = this.value.replace(/[^1-9]/g, '');" @bind="@(cells[row,7])"/></td> 
            <td><input type="text" maxlength="1" oninput="this.value = this.value.replace(/[^1-9]/g, '');" @bind="@(cells[row,8])"/></td> 
        </tr> 
    }
    </tbody>
</table>


<button class="btn-primary" @onclick="SolveClicked" >Solve</button>

@code {
    const int Width = 9;
    const int Height = 9;
    
    string[,] cells = new string[Height, Width];

    protected override void OnInitialized()
    {
        if (_service.SudokuGrid != null)
        {
            _service.ClearGrid();
        }
    }

    void SolveClicked()
    {
        var grid = new Grid(Width, Height);
        
        // generate a grid from the cells replacing empty ones with -1
        for (var y = 0; y < Height; y++)
        {
            for (var x = 0; x < Width; x++)
            {
                // a cell by default has a value of null, it will have a value of an empty string when 
                // a user enters anything that's not a digit in 1-9
                grid.Cells[y, x] = (cells[y, x] == "" || cells[y,x] == null) ? -1 : int.Parse(cells[y, x]);
            }
        }

        _service.SudokuGrid = grid;
        
        // navigate to the solve page
        _navigation.NavigateTo("/solve");
        
    }

}